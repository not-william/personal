{"remainingRequest":"/Users/william/code/personal/client/node_modules/babel-loader/lib/index.js!/Users/william/code/personal/client/node_modules/eslint-loader/index.js??ref--13-0!/Users/william/code/personal/client/src/store/auth.js","dependencies":[{"path":"/Users/william/code/personal/client/src/store/auth.js","mtime":1605130416824},{"path":"/Users/william/code/personal/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/william/code/personal/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/william/code/personal/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3dpbGxpYW0vY29kZS9wZXJzb25hbC9jbGllbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgdG9rZW46IG51bGwsCiAgICB1c2VyOiBudWxsCiAgfSwKICBnZXR0ZXJzOiB7CiAgICBhdXRoZW50aWNhdGVkOiBmdW5jdGlvbiBhdXRoZW50aWNhdGVkKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS50b2tlbiAmJiBzdGF0ZS51c2VyOwogICAgfSwKICAgIHVzZXI6IGZ1bmN0aW9uIHVzZXIoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXI7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIFNFVF9UT0tFTjogZnVuY3Rpb24gU0VUX1RPS0VOKHN0YXRlLCB0b2tlbikgewogICAgICBzdGF0ZS50b2tlbiA9IHRva2VuOwogICAgfSwKICAgIFNFVF9VU0VSOiBmdW5jdGlvbiBTRVRfVVNFUihzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS51c2VyID0gZGF0YTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIHNpZ25JbjogZnVuY3Rpb24gc2lnbkluKF9yZWYsIGNyZWRlbnRpYWxzKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCd0b2tlbi8nLCBjcmVkZW50aWFscyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGRpc3BhdGNoKCdhdHRlbXB0JywgcmVzcG9uc2UuZGF0YS5hY2Nlc3MpKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGF0dGVtcHQ6IGZ1bmN0aW9uIGF0dGVtcHQoX3JlZjIsIHRva2VuKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQsIHN0YXRlLCByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0LCBzdGF0ZSA9IF9yZWYyLnN0YXRlOwoKICAgICAgICAgICAgICAgIGlmICh0b2tlbikgewogICAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9UT0tFTicsIHRva2VuKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoc3RhdGUudG9rZW4pIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJ3VzZXJzL21lLycpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCdTRVRfVVNFUicsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSg0KTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgbnVsbCk7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9VU0VSJywgbnVsbCk7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbNCwgMTFdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNpZ25PdXQ6IGZ1bmN0aW9uIHNpZ25PdXQoY29tbWl0KSB7CiAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgbnVsbCk7CiAgICAgIGNvbW1pdCgnU0VUX1VTRVInLCBudWxsKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/william/code/personal/client/src/store/auth.js"],"names":["axios","namespaced","state","token","user","getters","authenticated","mutations","SET_TOKEN","SET_USER","data","actions","signIn","credentials","dispatch","post","response","access","attempt","commit","get","signOut"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAGbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,IADF;AAELC,IAAAA,IAAI,EAAE;AAFD,GAHM;AAQbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,yBACQJ,KADR,EACe;AACpB,aAAOA,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACE,IAA5B;AACD,KAHM;AAKPA,IAAAA,IALO,gBAKDF,KALC,EAKM;AACX,aAAOA,KAAK,CAACE,IAAb;AACD;AAPM,GARI;AAkBbG,EAAAA,SAAS,EAAE;AACTC,IAAAA,SADS,qBACEN,KADF,EACSC,KADT,EACgB;AACvBD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD,KAHQ;AAKTM,IAAAA,QALS,oBAKCP,KALD,EAKQQ,IALR,EAKc;AACrBR,MAAAA,KAAK,CAACE,IAAN,GAAaM,IAAb;AACD;AAPQ,GAlBE;AA4BbC,EAAAA,OAAO,EAAE;AACDC,IAAAA,MADC,wBACoBC,WADpB,EACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxBC,gBAAAA,QAAwB,QAAxBA,QAAwB;AAAA;AAAA,uBACjBd,KAAK,CAACe,IAAN,CAAW,QAAX,EAAqBF,WAArB,CADiB;;AAAA;AAClCG,gBAAAA,QADkC;AAAA,iDAG/BF,QAAQ,CAAC,SAAD,EAAYE,QAAQ,CAACN,IAAT,CAAcO,MAA1B,CAHuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIvC,KALM;AAODC,IAAAA,OAPC,0BAO2Bf,KAP3B,EAOkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxBgB,gBAAAA,MAAwB,SAAxBA,MAAwB,EAAhBjB,KAAgB,SAAhBA,KAAgB;;AACvC,oBAAIC,KAAJ,EAAW;AACTgB,kBAAAA,MAAM,CAAC,WAAD,EAAchB,KAAd,CAAN;AACD;;AAHsC,oBAKlCD,KAAK,CAACC,KAL4B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAUhBH,KAAK,CAACoB,GAAN,CAAU,WAAV,CAVgB;;AAAA;AAUjCJ,gBAAAA,QAViC;AAYrCG,gBAAAA,MAAM,CAAC,UAAD,EAAaH,QAAQ,CAACN,IAAtB,CAAN;AAZqC;AAAA;;AAAA;AAAA;AAAA;AAcrCS,gBAAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;AACAA,gBAAAA,MAAM,CAAC,UAAD,EAAa,IAAb,CAAN;;AAfqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBxC,KAxBM;AA0BPE,IAAAA,OA1BO,mBA0BEF,MA1BF,EA0BU;AACfA,MAAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;AACAA,MAAAA,MAAM,CAAC,UAAD,EAAa,IAAb,CAAN;AACD;AA7BM;AA5BI,CAAf","sourcesContent":["import axios from 'axios'\n\nexport default {\n  namespaced: true,\n\n  state: {\n    token: null,\n    user: null,\n  },\n\n  getters: {\n    authenticated (state) {\n      return state.token && state.user\n    },\n\n    user (state) {\n      return state.user\n    }\n  },\n\n  mutations: {\n    SET_TOKEN (state, token) {\n      state.token = token\n    },\n\n    SET_USER (state, data) {\n      state.user = data\n    }\n  },\n\n  actions: {\n    async signIn ({ dispatch}, credentials) {\n      let response = await axios.post('token/', credentials)\n\n      return dispatch('attempt', response.data.access)\n    },\n\n    async attempt ({ commit, state }, token) {\n      if (token) {\n        commit('SET_TOKEN', token)\n      }\n\n      if (!state.token) {\n        return\n      }\n\n      try {\n        let response = await axios.get('users/me/')\n\n        commit('SET_USER', response.data)\n      } catch (e) {\n        commit('SET_TOKEN', null)\n        commit('SET_USER', null)\n      }\n    },\n\n    signOut (commit) {\n      commit('SET_TOKEN', null)\n      commit('SET_USER', null) \n    }\n  },\n}"]}]}